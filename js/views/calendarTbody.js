// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['backbone', 'views/datesCollection', 'collections/dates'], function(Backbone, DatesCollectionView, DatesCollection) {
  var CalendarTbody;
  CalendarTbody = (function(_super) {

    __extends(CalendarTbody, _super);

    function CalendarTbody() {
      return CalendarTbody.__super__.constructor.apply(this, arguments);
    }

    CalendarTbody.prototype.tagName = 'tbody';

    CalendarTbody.prototype.render = function() {
      var datesCollectionView, days, i, week, x, _i, _j, _ref, _ref1, _ref2;
      days = this.model.get('days');
      for (i = _i = 0, _ref = days.length / 7; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        week = new DatesCollection();
        for (x = _j = _ref1 = i * 7, _ref2 = i * 7 + 7; _ref1 <= _ref2 ? _j < _ref2 : _j > _ref2; x = _ref1 <= _ref2 ? ++_j : --_j) {
          week.add(days.at(x));
        }
        datesCollectionView = new DatesCollectionView({
          collection: week
        }).render();
        this.$el.append(datesCollectionView.el);
      }
      return this;
    };

    return CalendarTbody;

  })(Backbone.View);
  return CalendarTbody;
});
