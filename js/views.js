// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Calendar.Views.Calendar = (function(_super) {

    __extends(Calendar, _super);

    function Calendar() {
      return Calendar.__super__.constructor.apply(this, arguments);
    }

    Calendar.prototype.el = '#calendar';

    Calendar.prototype.initialize = function() {
      var header, table;
      header = new Calendar.Views.Header({
        model: this.model
      }).render();
      table = new Calendar.Views.Table({
        model: this.model
      }).render();
      return this.render();
    };

    Calendar.prototype.render = function() {
      this.$el.append(this.header.el);
      this.$el.append('<div class="cal">');
      this.$el.append(this.table.el);
      this.$el.append('</div>');
      return this;
    };

    return Calendar;

  })(Backbone.View);

  Calendar.Views.Header = (function(_super) {

    __extends(Header, _super);

    function Header() {
      return Header.__super__.constructor.apply(this, arguments);
    }

    Header.prototype.className = 'calendarHead';

    Header.prototype.template = _.template(['<button class="prev"><</button>', '<h1><%= month %></h1>', '<button class="next">></button>'].join("\n"));

    Header.prototype.render = function() {
      this.$el.append(this.template(this.model.toJSON()));
      return this;
    };

    return Header;

  })(Backbone.View);

  Calendar.Views.Table = (function(_super) {

    __extends(Table, _super);

    function Table() {
      return Table.__super__.constructor.apply(this, arguments);
    }

    Table.prototype.tagName = 'table';

    Table.prototype.initialize = function() {
      return this.thead = new Calendar.Views.TableHead({
        model: this.model
      }).render();
    };

    Table.prototype.render = function() {
      this.$el.append(this.thead.el);
      this.$el.append(this.tbody.el);
      return this;
    };

    return Table;

  })(Backbone.View);

  Calendar.Views.TableHead = (function(_super) {

    __extends(TableHead, _super);

    function TableHead() {
      return TableHead.__super__.constructor.apply(this, arguments);
    }

    TableHead.prototype.tagName = 'thead';

    TableHead.prototype.render = function() {
      this.$el.append('<tr>');
      this.model.daysInWeek.each(this.addDay(this));
      this.$el.append('</tr>');
      return this;
    };

    TableHead.prototype.addDay = function(day) {
      this.$el.append('<th>' + day + '</th>');
      return this;
    };

    return TableHead;

  })(Backbone.View);

}).call(this);
